
version: '3'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod

    container_name: words-frontend
    command: serve -s build -l 3000
    restart: unless-stopped
    networks:
      - words-docker-network
    environment:
      - MODE=PROD

  api:
    build: ./api
    container_name: words-api
    command: npm run start
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=3001
      - MONGO_URL=mongodb://api_db:27017/api
      - AUTH_API_URL=http://auth:3002
      - USERS_URL=http://users:3003
    depends_on:
      - api_db
    networks:
      - words-docker-network

  users:
    build: ./users
    container_name: words-users
    command: npm run start
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=3003
      - MONGO_URL=mongodb://auth_db:27017/auth
      - AUTH_API_URL=http://auth:3002
      - API_URL=http://api:3001
    depends_on:
      - auth_db
    networks:
      - words-docker-network

  auth:
    build: ./auth
    container_name: words-auth
    command: npm run start
    restart: unless-stopped
    environment:
      - CHOKIDAR_USEPOLLING=true
      - PORT=3002
      - MONGO_URL=mongodb://auth_db:27017/auth
      - API_URL=http://api:3001
      - USERS_URL=http://users:3003
      - ACCESS_TOKEN_SECRET=word-access-secret-key
      - REFRESH_TOKEN_SECRET=word-refresh-secret-key
      - MAIL_ID=words.sup@mail.ru
      - MAIL_PASSWORD=C7pk1KpAh4YkyUu6gY0S
      - APP_URL=http://localhost:3000
      - CLIENT_URL=http://ya.ru
    depends_on:
      - auth_db
    networks:
      - words-docker-network

  auth_db:
    container_name: words-auth-db
    image: mongo:latest
    volumes:
      - mongodb_auth:/data/db
    networks:
      - words-docker-network

  api_db:
    container_name: words-api-db
    image: mongo:latest
    volumes:
      - mongodb_api:/data/db
    networks:
      - words-docker-network

  nginx:
    image: nginx:stable-alpine
    container_name: words-nginx
    ports:
      - '80:80'
    volumes:
      - ./nginx/nginx.conf.prod:/etc/nginx/conf.d/nginx.conf
    depends_on:
      - frontend
      - api
      - auth
    networks:
      - words-docker-network

volumes:
  mongodb_api:
  mongodb_auth:

networks:
  words-docker-network:
    driver: bridge
